@model DigitalStorefront.Models.OrderEditViewModel

<h1>Edit Order</h1>

<form id="order-form" asp-action="Edit" method="post">
    <!-- Hidden field for OrderId -->
    <input type="hidden" asp-for="Order.OrderId" />

    <div class="form-group">
        <label asp-for="Order.OrderCode" class="control-label"></label>
        <input asp-for="Order.OrderCode" class="form-control" readonly />
        <span asp-validation-for="Order.OrderCode" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Order.CustomerName" class="control-label"></label>
        <input asp-for="Order.CustomerName" class="form-control" />
        <span asp-validation-for="Order.CustomerName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Order.Phone" class="control-label"></label>
        <input asp-for="Order.Phone" class="form-control" />
        <span asp-validation-for="Order.Phone" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Order.Address" class="control-label"></label>
        <input asp-for="Order.Address" class="form-control" />
        <span asp-validation-for="Order.Address" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Order.OrderDate" class="control-label"></label>
        <input asp-for="Order.OrderDate" class="form-control" type="date" />
        <span asp-validation-for="Order.OrderDate" class="text-danger"></span>
    </div>

    <h3>Product Details</h3>
    <table>
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>Total Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="product-details">
            @for (int i = 0; i < Model.ProductDetails.Count; i++)
            {
                <tr class="product-detail">
                    
                    <input type="hidden" name="ProductDetails[@i].ProductDetailId" value="@Model.ProductDetails[i].ProductDetailId" />
                    <td>
                        <input name="ProductDetails[@i].ProductName" value="@Model.ProductDetails[i].ProductName" class="form-control" />
                    </td>
                    <td>
                        <input name="ProductDetails[@i].Quantity" value="@Model.ProductDetails[i].Quantity" class="quantity form-control" />
                    </td>
                    <td>
                        <input name="ProductDetails[@i].UnitPrice" value="@Model.ProductDetails[i].UnitPrice" class="unit-price form-control" />
                    </td>
                    <td>
                        <input name="ProductDetails[@i].TotalPrice" value="@Model.ProductDetails[i].TotalPrice" class="total-price form-control" readonly />
                    </td>
                    <td>
                        <button type="button" class="remove-product btn btn-danger" data-index="@i">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" id="add-product" class="btn btn-primary mt-2">Add Product</button>

    <div class="form-group mt-3">
        <label asp-for="Order.TotalAmount" class="control-label"></label>
        <input asp-for="Order.TotalAmount" class="form-control" readonly />
        <span asp-validation-for="Order.TotalAmount" class="text-danger"></span>
    </div>

    <input type="submit" value="Save Changes" class="btn btn-primary" />
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#add-product').click(function () {
                let index = $('#product-details').children().length;
                let newProductDetail = `
                            <tr class="product-detail">
                                <input type="hidden" name="ProductDetails[${index}].ProductDetailId" />
                                <td>
                                    <input name="ProductDetails[${index}].ProductName" class="form-control" />
                                </td>
                                <td>
                                    <input name="ProductDetails[${index}].Quantity" class="quantity form-control" />
                                </td>
                                <td>
                                    <input name="ProductDetails[${index}].UnitPrice" class="unit-price form-control" />
                                </td>
                                <td>
                                    <input name="ProductDetails[${index}].TotalPrice" class="total-price form-control" readonly />
                                </td>
                                <td>
                                    <button type="button" class="remove-product btn btn-danger" data-index="${index}">Remove</button>
                                </td>
                            </tr>
                        `;
                $('#product-details').append(newProductDetail);
            });

            $('#product-details').on('input', '.quantity, .unit-price', function () {
                updateTotalPrice($(this));
            });

            $('#product-details').on('click', '.remove-product', function () {
                $(this).closest('tr').remove();
                updateIndices();
                updateTotalAmount(); 
            });

            function updateTotalPrice(element) {
                let row = element.closest('tr');
                let quantity = parseFloat(row.find('.quantity').val()) || 0;
                let unitPrice = parseFloat(row.find('.unit-price').val()) || 0;
                let totalPrice = quantity * unitPrice;
                row.find('.total-price').val(totalPrice.toFixed(2));
                updateTotalAmount(); 
            }

            function updateTotalAmount() {
                let totalAmount = 0;
                $('#product-details .total-price').each(function () {
                    totalAmount += parseFloat($(this).val()) || 0;
                });
                $('input[name="Order.TotalAmount"]').val(totalAmount.toFixed(2)); // Set the total amount
            }

            function updateIndices() {
                $('#product-details .product-detail').each(function (index) {
                    $(this).find('input').each(function () {
                        let name = $(this).attr('name');
                        $(this).attr('name', name.replace(/\[\d+\]/, `[${index}]`));
                    });
                });
            }

            $('#order-form').submit(function (event) {
                
                event.preventDefault();
                let formData = $(this).serialize();
                console.log('Serialized Form Data:', formData);

                
                $.post($(this).attr('action'), formData)
                    .done(function (response) {
                        console.log('Server Response:', response);
                        window.location.href = '/Home/Index';
                    })
                    .fail(function (xhr, status, error) {
                        console.error('Error Details:', {
                            status: status,
                            error: error,
                            responseText: xhr.responseText
                        });
                        //alert('Error: ' + error);
                    });
            });

            
            updateTotalAmount();
        });
    </script>
}
